version: '3'
services:

  config:
    build:
      context: ./config
      dockerfile: Dockerfile
    domainname: config
    container_name: config
    ports:
      - "8888:8888"
    restart: always
    networks:
      - some-net

  eureka:
    build:
      context: ./eureka
      dockerfile: Dockerfile
    container_name: eureka
    ports:
      - "8761:8761"
    restart: always
    networks:
      - some-net

  core:
    build:
      context: ./core
      dockerfile: Dockerfile
    domainname: core
    container_name: core
    ports:
      - "8189:8189"
    restart: always
    networks:
      - some-net
    depends_on:
      - config
      - eureka

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "5555:5555"
    restart: always
    networks:
      - some-net
    depends_on:
      - config
      - eureka

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: front
    ports:
      - "3000:3000"
    restart: always
    networks:
      - some-net
    depends_on:
      - config
      - eureka

  security:
    build:
      context: ./security
      dockerfile: Dockerfile
    container_name: security
    ports:
      - "8188:8188"
    restart: always
    networks:
      - some-net
    depends_on:
      - config
      - eureka

  storage-app:
    build:
      context: ./storage-app
      dockerfile: Dockerfile
    container_name: storage-app
    ports:
      - "8191:8191"
    volumes:
      - ./storage:/app/storage
    restart: always
    networks:
      - some-net
    depends_on:
      - config
      - eureka
  cart:
    build:
      context: ./cart
      dockerfile: Dockerfile
    container_name: cart
    ports:
      - "8190:8190"
    restart: always
    networks:
      - some-net
    depends_on:
      - config
      - eureka
  redis:
    image: 'bitnami/redis:latest'
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    networks:
      - some-net





  logstash:
    image: logstash:8.8.1
    container_name: logstash
    ports:
      - "5044:5044"
    volumes:
      - ./logstash/config:/usr/share/logstash/config/
      - ./logstash/pipeline:/usr/share/logstash/pipeline/
    restart: always
    networks:
      - some-net
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:8.8.1
    container_name: elasticsearch
    ports:
        - "9200:9200"
        - "9300:9300"
    volumes:
        - ./elasticsearch/data:/usr/share/elasticsearch/data
    environment:
        - cluster.name=docker-cluster
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
          soft: -1
          hard: -1
    restart: always
    networks:
        - some-net
  kibana:
    image: kibana:8.8.1
    container_name: kibana
    ports:
        - "5601:5601"
    environment:
        - ELASTICSEARCH_URL=http://elasticsearch:9200
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    restart: always
    networks:
        - some-net
    depends_on:
        - elasticsearch
networks:
  some-net: